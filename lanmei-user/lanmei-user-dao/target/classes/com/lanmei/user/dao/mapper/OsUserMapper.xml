<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmei.user.dao.mapper.OsUserMapper">
  <resultMap id="BaseResultMap" type="com.lanmei.user.dao.model.OsUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_number" jdbcType="INTEGER" property="userNumber" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="actual_name" jdbcType="VARCHAR" property="actualName" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_active" jdbcType="TINYINT" property="emailActive" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="login_nums" jdbcType="INTEGER" property="loginNums" />
    <result column="head_portrait" jdbcType="LONGVARBINARY" property="headPortrait" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from os_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanmei.user.dao.model.OsUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into os_user (user_number, nick_name, login_password, 
      salt, actual_name, gender, 
      age, status, email, 
      email_active, phone_num, register_time, 
      last_login_time, login_nums, head_portrait
      )
    values (#{userNumber,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{actualName,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{age,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR}, 
      #{emailActive,jdbcType=TINYINT}, #{phoneNum,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginNums,jdbcType=INTEGER}, #{headPortrait,jdbcType=LONGVARBINARY}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lanmei.user.dao.model.OsUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update os_user
    set user_number = #{userNumber,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      actual_name = #{actualName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      email_active = #{emailActive,jdbcType=TINYINT},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_nums = #{loginNums,jdbcType=INTEGER},
      head_portrait = #{headPortrait,jdbcType=LONGVARBINARY}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender, 
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums, 
    head_portrait
    from os_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender, 
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums, 
    head_portrait
    from os_user
  </select>

  <!-- 通过电话号码查询 -->
  <select id="selectByPhoneNum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where phone_num = #{phoneNum,jdbcType=VARCHAR}
  </select>
  <!-- 通过电话号码/邮箱/用户名查询 -->
  <!-- 动态SQL -->
  <select id="selectByUser" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where  1 = 1
    <if test="nickName != null and nickName != '' ">
      and nick_name = #{nickName,jdbcType=VARCHAR}
    </if>
    <if test="phoneNum != null and phoneNum !='' ">
      and phone_num = #{phoneNum,jdbcType=VARCHAR}
    </if>
    <if test="email != null and email != '' ">
      and email = #{email,jdbcType=VARCHAR}
    </if>
  </select>

  <!-- 注册用户 -->
  <insert id="insertRegister" parameterType="org.lanmei.user.dao.model.OsUser">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into os_user (login_password, salt,  phone_num, register_time)
    values (#{loginPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
    #{phoneNum,jdbcType=VARCHAR},#{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 根据电话号码获取OsUser -->
  <select id="selectByTelNum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where phone_num = #{phoneNum,jdbcType=VARCHAR}
  </select>
  <!-- 根据email获取OsUser -->
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <!-- 根据用户名称获取OsUser -->
  <select id="selectByNickName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where nickName = #{nickName,jdbcType=VARCHAR}
  </select>

  <!-- 通过邮箱修改密码-->
  <update id="updatePasswordByEmail" parameterType="java.lang.String">
    update os_user
    set
    login_password = #{loginPassword,jdbcType=VARCHAR},
    salt = #{salt,jdbcType=VARCHAR}
    where email = #{email,jdbcType=VARCHAR}
  </update>
  <!-- 通过昵称修改密码-->
  <update id="updatePasswordByNickName" parameterType="java.lang.String">
    update os_user
    set
    login_password = #{loginPassword,jdbcType=VARCHAR},
    salt = #{salt,jdbcType=VARCHAR}
    where nick_name = #{nickName,jdbcType=VARCHAR}
  </update>
  <!-- 通过电话修改密码-->
  <update id="updatePasswordByTelNum" parameterType="java.lang.String">

    update os_user
    set
    login_password = #{loginPassword,jdbcType=VARCHAR},
    salt = #{salt,jdbcType=VARCHAR}
    where phone_num = #{phoneNum,jdbcType=VARCHAR}
  </update>
</mapper>