<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmei.user.dao.mapper.OsUserLoginMapper">
  <resultMap id="BaseResultMap" type="com.lanmei.user.dao.model.OsUserLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="login_id" jdbcType="INTEGER" property="loginId" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="explorer" jdbcType="VARCHAR" property="explorer" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from os_user_login
    where login_id = #{loginId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanmei.user.dao.model.OsUserLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="loginId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into os_user_login (login_id, login_time, login_ip, 
      user_id, explorer)
    values (#{loginId,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{explorer,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lanmei.user.dao.model.OsUserLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update os_user_login
    set login_time = #{loginTime,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      explorer = #{explorer,jdbcType=VARCHAR}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select login_id, login_time, login_ip, user_id, explorer
    from os_user_login
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select login_id, login_time, login_ip, user_id, explorer
    from os_user_login
  </select>

  <!-- 自定义 -->
  <update id="updateByUserId" parameterType="com.lanmei.user.dao.model.OsUserLogin">
    update os_user_login
    set login_time = #{userLogin.loginTime,jdbcType=TIMESTAMP},
      login_ip = #{userLogin.loginIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      explorer = #{userLogin.explorer,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <!-- 通过 user_id  更新登录日志  -->
  <insert id="insertByUserId" parameterType="com.lanmei.user.dao.model.OsUserLogin">
    <selectKey keyProperty="loginId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into os_user_login (login_id, login_time, login_ip,
    user_id, explorer)
    values (#{userLogin.loginId,jdbcType=INTEGER}, #{userLogin.loginTime,jdbcType=TIMESTAMP},
    #{userLogin.loginIp,jdbcType=VARCHAR},  #{userId,jdbcType=INTEGER},
    #{userLogin.explorer,jdbcType=VARCHAR})
  </insert>
  <!-- 通过user_id 获取登录日志 -->
  <select id="selectByUserId" resultMap="BaseResultMap">
    select login_id, login_time, login_ip, user_id, explorer
    from os_user_login
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <!-- 通过电话号码查询 -->
  <select id="selectByPhoneNum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where phone_num = #{phoneNum,jdbcType=VARCHAR}
  </select>
  <!-- 通过电话号码/邮箱/用户名查询 -->
  <!-- 动态SQL -->
  <select id="selectByUser" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where  1 = 1
    <if test="nickName != null and nickName != '' ">
      and nick_name = #{nickName,jdbcType=VARCHAR}
    </if>
    <if test="phoneNum != null and phoneNum !='' ">
      and phone_num = #{phoneNum,jdbcType=VARCHAR}
    </if>
    <if test="email != null and email != '' ">
      and email = #{email,jdbcType=VARCHAR}
    </if>
  </select>

  <!-- 注册用户 -->
  <insert id="insertRegister" parameterType="com.lanmei.user.dao.model.OsUser">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into os_user (login_password, salt,  phone_num, register_time)
    values (#{loginPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
    #{phoneNum,jdbcType=VARCHAR},#{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 根据电话号码获取OsUser -->
  <select id="selectByTelNum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where phone_num = #{phoneNum,jdbcType=VARCHAR}
  </select>
  <!-- 根据email获取OsUser -->
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <!-- 根据用户名称获取OsUser -->
  <select id="selectByNickName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    head_portrait
    from os_user
    where nickName = #{nickName,jdbcType=VARCHAR}
  </select>
  
</mapper>